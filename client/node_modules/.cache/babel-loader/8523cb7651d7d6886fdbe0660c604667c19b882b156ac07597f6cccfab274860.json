{"ast":null,"code":"var _jsxFileName = \"/Users/samritbasnet/Desktop/crossover-helpdesk/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { authAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem(\"token\");\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedToken && storedUser) {\n        try {\n          // Parse stored user\n          const parsedUser = JSON.parse(storedUser);\n\n          // Verify token with backend\n          await authAPI.getCurrentUser();\n          setUser(parsedUser);\n          setToken(storedToken);\n        } catch (error) {\n          // Token invalid -> clear storage\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        token: newToken,\n        user: userData\n      } = response; // Fixed: response instead of response.data\n\n      localStorage.setItem(\"token\", newToken);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      setToken(newToken);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await authAPI.signup(userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response; // Fixed: response instead of response.data\n\n      localStorage.setItem(\"token\", newToken);\n      localStorage.setItem(\"user\", JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Signup failed\"\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setToken(null);\n    setUser(null);\n  };\n  const isAgent = () => (user === null || user === void 0 ? void 0 : user.role) === \"agent\";\n  const isUser = () => (user === null || user === void 0 ? void 0 : user.role) === \"user\";\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      signup,\n      logout,\n      isAgent,\n      isUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"CqPWeQPIAZcxf1k81ln9DyaZT80=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","storedToken","storedUser","parsedUser","JSON","parse","getCurrentUser","error","removeItem","login","credentials","response","newToken","userData","setItem","stringify","success","_error$response","_error$response$data","message","data","signup","newUser","_error$response2","_error$response2$data","logout","isAgent","role","isUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samritbasnet/Desktop/crossover-helpdesk/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { authAPI } from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem(\"token\");\n      const storedUser = localStorage.getItem(\"user\");\n\n      if (storedToken && storedUser) {\n        try {\n          // Parse stored user\n          const parsedUser = JSON.parse(storedUser);\n\n          // Verify token with backend\n          await authAPI.getCurrentUser();\n\n          setUser(parsedUser);\n          setToken(storedToken);\n        } catch (error) {\n          // Token invalid -> clear storage\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authAPI.login(credentials);\n      const { token: newToken, user: userData } = response; // Fixed: response instead of response.data\n\n      localStorage.setItem(\"token\", newToken);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n\n      setToken(newToken);\n      setUser(userData);\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || \"Login failed\",\n      };\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const response = await authAPI.signup(userData);\n      const { token: newToken, user: newUser } = response; // Fixed: response instead of response.data\n\n      localStorage.setItem(\"token\", newToken);\n      localStorage.setItem(\"user\", JSON.stringify(newUser));\n\n      setToken(newToken);\n      setUser(newUser);\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || \"Signup failed\",\n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setToken(null);\n    setUser(null);\n  };\n\n  const isAgent = () => user?.role === \"agent\";\n  const isUser = () => user?.role === \"user\";\n\n  return (\n    <AuthContext.Provider\n      value={{ user, token, loading, login, signup, logout, isAgent, isUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}